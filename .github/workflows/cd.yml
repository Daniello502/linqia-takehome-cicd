name: CD
on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

permissions:
  contents: read
  packages: read
  pull-requests: write

env:
  REGISTRY: ghcr.io

jobs:
  deploy:
    name: Mock Deploy
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    
    steps:
      - name: Extract workflow metadata
        id: meta
        run: |
          echo "sha=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_OUTPUT
          
          PR_NUMBER=""
          if [[ "${{ github.event.workflow_run.event }}" == "pull_request" ]]; then
            PR_NUMBER=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}" \
              | jq -r '.pull_requests[0].number // empty')
          fi
          echo "pr-number=${PR_NUMBER}" >> $GITHUB_OUTPUT
          
          # Generate lowercase image name
          IMAGE_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "image-name=${IMAGE_NAME}" >> $GITHUB_OUTPUT
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Deploy (mock)
        id: deploy
        run: |
          IMAGE="${{ env.REGISTRY }}/${{ steps.meta.outputs.image-name }}:sha-${{ steps.meta.outputs.sha }}"
          echo "Pulling image: ${IMAGE}"
          docker pull "${IMAGE}"
          
          echo "Running deployment simulation..."
          OUTPUT=$(docker run --rm "${IMAGE}" 2 3 2>&1)
          echo "result=${OUTPUT}" >> $GITHUB_OUTPUT
          
          if [[ "${OUTPUT}" == "5" ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failed" >> $GITHUB_OUTPUT
          fi
      
      - name: Comment on PR
        if: steps.meta.outputs.pr-number != ''
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ steps.meta.outputs.pr-number }}';
            const status = '${{ steps.deploy.outputs.status }}';
            const result = '${{ steps.deploy.outputs.result }}';
            const sha = '${{ steps.meta.outputs.sha }}';
            const imageName = '${{ steps.meta.outputs.image-name }}';
            
            const body = `## Deployment Status: ${status.toUpperCase()}\n\n` +
              `Image: ${{ env.REGISTRY }}/${imageName}:sha-${sha}\n` +
              `Test Output: ${result}\n` +
              `Completed: ${new Date().toISOString()}`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: parseInt(prNumber),
              body
            });